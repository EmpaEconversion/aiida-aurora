[build-system]
# build the package with [flit](https://flit.readthedocs.io)
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
# See https://www.python.org/dev/peps/pep-0621/
name = "aiida-aurora"
dynamic = ["version"] # read from aiida_aurora/__init__.py
description = "AiiDA plugin for the Aurora platform."
authors = [
    { name = "Loris Ercole", email = "loris.ercole@gmail.com" },
    { name = "Francisco F. Ramirez", email = "ramirezfranciscof@gmail.com" },
    { name = "Edan Bainglass", email = "edan.bainglass@psi.ch" },
    { name = "Giovanni Pizzi", email = "giovanni.pizzi@psi.ch" },
]
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Development Status :: 3 - Alpha",
    "Framework :: AiiDA"
]
keywords = ["aiida", "plugin", "aurora"]
requires-python = ">=3.9"
dependencies = [
    "aiida-core>=2.0,<3",
    "aiida-ssh2win>=0.2",
    "dgbowl-schemas>=111,<=113",
    "pydantic<2.0",
    "scipy>=1.5.4,<2",
    "pandas~=1.5",
]

[project.urls]
Source = "https://github.com/epfl-theos/aiida-aurora"

[project.optional-dependencies]
testing = [
    "pgtest~=1.3.1",
    "wheel~=0.31",
    "coverage[toml]",
    "pytest~=6.0",
    "pytest-cov"
]
pre-commit = ["pre-commit~=2.2"]
docs = [
    "sphinx",
    "sphinx_rtd_theme",
    "sphinxcontrib-contentui",
    "sphinxcontrib-details-directive",
    "furo",
    "markupsafe<2.1"
]

[project.entry-points."aiida.data"]
"aurora.batterysample" = "aiida_aurora.data.battery:BatterySampleData"
"aurora.batterystate" = "aiida_aurora.data.battery:BatteryStateData"
"aurora.cyclingspecs" = "aiida_aurora.data.experiment:CyclingSpecsData"
"aurora.tomatosettings" = "aiida_aurora.data.control:TomatoSettingsData"

[project.entry-points."aiida.calculations"]
"aurora.fake" = "aiida_aurora.calculations.fake:BatteryFakeExperiment"
"aurora.cycler" = "aiida_aurora.calculations.cycler:BatteryCyclerExperiment"

[project.entry-points.'aiida.workflows']
'aurora.cycling_sequence' = 'aiida_aurora.workflows.cycling_sequence:CyclingSequenceWorkChain'

[project.entry-points."aiida.calculations.monitors"]
"aurora.monitors.capacity_threshold" = "aiida_aurora.monitors:monitor_capacity_threshold"

[project.entry-points."aiida.parsers"]
"aurora" = "aiida_aurora.parsers:TomatoParser"

[project.entry-points."aiida.schedulers"]
"tomato" = "aiida_aurora.scheduler:TomatoScheduler"

[project.entry-points."aiida.cmdline.data"]
"aurora" = "aiida_aurora.cli:data_cli"

[tool.flit.module]
name = "aiida_aurora"

[tool.pylint.format]
max-line-length = 125

[tool.pylint.messages_control]
disable = [
    "too-many-ancestors",
    "invalid-name",
    "duplicate-code",
    # black compatibility
    "C0330",
    "C0326",
]

[tool.pytest.ini_options]
# Configuration for [pytest](https://docs.pytest.org)
python_files = "test_*.py example_*.py"
filterwarnings = [
    "ignore::DeprecationWarning:aiida:",
    "ignore::DeprecationWarning:plumpy:",
    "ignore::DeprecationWarning:yaml:",
]

[tool.coverage.run]
# Configuration of [coverage.py](https://coverage.readthedocs.io)
# reporting which lines of your plugin are covered by tests
source = ["aiida_aurora"]

[tool.isort]
# Configuration of [isort](https://isort.readthedocs.io)
line_length = 120
force_sort_within_sections = true
sections = [
    'FUTURE',
    'STDLIB',
    'THIRDPARTY',
    'AIIDA',
    'FIRSTPARTY',
    'LOCALFOLDER'
]
known_aiida = ['aiida']

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38

[testenv]
usedevelop=True

[testenv:py{38,39,310}]
description = Run the test suite against a python version
extras = testing
setenv =
    AIIDA_WARN_v3 = 1
commands = pytest {posargs}

[testenv:pre-commit]
description = Run the pre-commit checks
extras =
    pre-commit
    testing
commands = pre-commit run {posargs}

[testenv:docs]
description = Build the documentation
extras = docs
commands = sphinx-build -nW --keep-going -b html {posargs} docs/source docs/build/html
commands_post = echo "open file://{toxinidir}/docs/build/html/index.html"
"""
